import { useState, useEffect } from 'react';
import { useNavigate, Link, useLocation } from 'react-router-dom';
import { Form, Input, Button, Card, Alert, message } from 'antd';
import { UserOutlined, LockOutlined } from '@ant-design/icons';
import useAuthStore from '../../stores/authStore';
import Navbar from '../../components/common/Navbar';

const Login = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { login, isAuthenticated, user, loading, error, clearError } = useAuthStore();

  // ‡∏î‡∏∂‡∏á redirect path ‡∏à‡∏≤‡∏Å state (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const from = location.state?.from || null;

  useEffect(() => {
    if (isAuthenticated && user) {
      console.log('‚úÖ User authenticated:', user);
      console.log('üîÑ Redirecting based on role:', user.role);
      
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ from ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      if (from) {
        console.log('üéØ Redirecting to from:', from);
        navigate(from, { replace: true });
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ï‡∏≤‡∏° role
        if (user.role === 'member') {
          console.log('üéØ Redirecting to member venues');
          navigate('/member/venues', { replace: true });
        } else if (user.role === 'admin' || user.role === 'manager') {
          console.log('üéØ Redirecting to admin dashboard');
          navigate('/admin/dashboard', { replace: true });
        }
      }
    }
  }, [isAuthenticated, user, navigate, from]);

  useEffect(() => {
    clearError();
  }, [clearError]);

  const onFinish = async (values) => {
    try {
      const response = await login(values.email, values.password);
      console.log('‚úÖ Login response:', response);
      message.success('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      
      // Force redirect ‡∏´‡∏•‡∏±‡∏á login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      const userData = response.data.user;
      if (userData.role === 'member') {
        navigate('/member/venues', { replace: true });
      } else if (userData.role === 'admin' || userData.role === 'manager') {
        navigate('/admin/dashboard', { replace: true });
      }
    } catch (err) {
      console.error('‚ùå Login error:', err);
      message.error(err.message || '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50">
      <Navbar />
      
      <div className="container mx-auto px-4 py-12 flex items-center justify-center min-h-[calc(100vh-80px)]">
        <div className="w-full max-w-md">
          <Card className="shadow-2xl border-0 rounded-2xl overflow-hidden">
            <div className="text-center mb-8 bg-gradient-to-r from-green-600 to-emerald-600 -mx-6 -mt-6 px-6 py-8 text-white">
              <div className="text-5xl mb-3">üèüÔ∏è</div>
              <h1 className="text-3xl font-bold mb-2">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h1>
              <p className="text-green-100">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤</p>
            </div>

            {from && (
              <Alert
                message="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"
                description="‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°"
                type="info"
                showIcon
                className="mb-4 rounded-lg"
              />
            )}

            {error && (
              <Alert
                message={error}
                type="error"
                closable
                onClose={clearError}
                className="mb-4 rounded-lg"
              />
            )}

            <Form
              name="login"
              onFinish={onFinish}
              autoComplete="off"
              layout="vertical"
              size="large"
            >
              <Form.Item
                label={<span className="font-semibold">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</span>}
                name="email"
                rules={[
                  { required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•' },
                  { type: 'email', message: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' }
                ]}
              >
                <Input 
                  prefix={<UserOutlined className="text-green-600" />} 
                  placeholder="your@email.com"
                  className="rounded-lg"
                />
              </Form.Item>

              <Form.Item
                label={<span className="font-semibold">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</span>}
                name="password"
                rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô' }]}
              >
                <Input.Password
                  prefix={<LockOutlined className="text-green-600" />}
                  placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                  className="rounded-lg"
                />
              </Form.Item>

              <div className="flex justify-between items-center mb-6">
                <Link to="/forgot-password" className="text-green-600 hover:text-green-700 text-sm">
                  ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?
                </Link>
              </div>

              <Form.Item>
                <Button
                  type="primary"
                  htmlType="submit"
                  loading={loading}
                  className="w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 border-0 font-semibold h-12 text-lg rounded-full shadow-lg hover:shadow-xl transition-all"
                >
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </Button>
              </Form.Item>

              <div className="text-center pt-4 border-t border-gray-200">
                <span className="text-gray-600">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ? </span>
                <Link to="/register" className="text-green-600 hover:text-green-700 font-semibold">
                  ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
                </Link>
              </div>
            </Form>
          </Card>

          {/* <div className="mt-6 text-center">
            <p className="text-gray-600 mb-3">‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢</p>
            <div className="flex gap-3 justify-center">
              <Link to="/">
                <Button className="rounded-full">
                  üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                </Button>
              </Link>
              <Link to="/venues">
                <Button className="rounded-full">
                  üèüÔ∏è ‡∏î‡∏π‡∏™‡∏ô‡∏≤‡∏°
                </Button>
              </Link>
            </div>
          </div> */}
        </div>
      </div>

      <footer className="bg-white border-t border-gray-200 py-6 mt-auto">
        <div className="container mx-auto px-4 text-center text-gray-600">
          <p>¬© 2025 Sport Booking System - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏ó‡∏Å‡∏µ‡∏¨‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</p>
        </div>
      </footer>
    </div>
  );
};

export default Login;