import { useEffect } from "react";
import { useNavigate, Link, useLocation } from "react-router-dom";
import { Form, Input, Button, Checkbox, Alert } from "antd";
import {
  EyeInvisibleOutlined,
  EyeOutlined,
} from "@ant-design/icons";
import { FaDumbbell } from "react-icons/fa6";
import { FaFacebook, FaGoogle, FaLock } from "react-icons/fa";
import { IoIosMail } from "react-icons/io";
import { IoMdExit } from "react-icons/io";
import { toast } from "react-toastify";
import useAuthStore from "../../stores/authStore";
import Navbar from "../../components/common/Navbar";

const Login = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { login, isAuthenticated, user, loading, clearError } = useAuthStore();

  const from = location.state?.from || null;

  useEffect(() => {
    if (isAuthenticated && user) {
      console.log("‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡πâ‡∏ß:", user);
    }
  }, [isAuthenticated, user]);

  useEffect(() => {
    clearError();
  }, [clearError]);

  const onFinish = async (values) => {
    try {
      const response = await login(values.email, values.password);
      console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", response);

      const userData = response.data.user;

      toast.success("üéâ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å...", {
        position: "top-right",
        autoClose: 1500,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: false,
        draggable: true,
      });

      setTimeout(() => {
        if (from) {
          navigate(from, { replace: true });
        } else if (userData.role === "member") {
          navigate("/member/venues", { replace: true });
        } else if (userData.role === "admin" || userData.role === "manager") {
          navigate("/admin/dashboard", { replace: true });
        }
      }, 1000);
    } catch (err) {
      console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö:", err);
      console.log("‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
      console.log("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err.message);
      console.log("‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err.response);

      let errorMessage = "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö";

      if (err.response?.data?.message) {
        errorMessage = err.response.data.message;
      } else if (err.message) {
        errorMessage = err.message;
      } else if (typeof err === "string") {
        errorMessage = err;
      }

      toast.error(
        <div className="p-2">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-lg">‚ùå</span>
            <strong className="text-base">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</strong>
          </div>
          <p className="text-sm mb-2">{errorMessage}</p>
          <div className="text-xs opacity-75 border-t border-red-200 pt-2 mt-2">
            üí° <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong>
            <ul className="list-disc list-inside mt-1 space-y-0.5">
              <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
              <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î Caps Lock</li>
            </ul>
          </div>
        </div>,
        {
          position: "top-right",
          autoClose: 1500,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: false,
          draggable: true,
          closeButton: true,
          style: {
            minWidth: "350px",
          },
        }
      );
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      {/* Navbar */}
      <Navbar />

      {/* Main Content */}
      <div className="container mx-auto px-4 py-12 flex items-center justify-center min-h-[calc(100vh-80px)]">
        <div className="w-full max-w-md">
          {/* Alert */}
          {from && (
            <Alert
              message="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"
              description="‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°"
              type="info"
              showIcon
              className="mb-6 rounded-xl"
            />
          )}

          {/* Main Card */}
          <div className="bg-white rounded-3xl shadow-2xl p-8">
            {/* Icon Header */}
            <div className="flex justify-center mb-6">
              <div className="w-16 h-16 bg-gradient-to-br from-orange-500 to-red-500 rounded-full flex items-center justify-center shadow-lg">
                <FaDumbbell className="text-white text-3xl" />
              </div>
            </div>

            {/* Title */}
            <div className="text-center mb-8">
              <h1 className="!text-3xl !font-bold !text-gray-800 !mb-2">
                ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
              </h1>
              <p className="text-gray-500 text-sm">
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏Å‡∏µ‡∏¨‡∏≤
              </p>
            </div>

            {/* Form */}
            <Form
              name="login"
              onFinish={onFinish}
              autoComplete="off"
              layout="vertical"
              requiredMark={false}
            >
              {/* Email */}
              <Form.Item
                label={
                  <span className="text-gray-700 font-medium text-sm">
                    ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
                  </span>
                }
                name="email"
                rules={[
                  { required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•" },
                  { type: "email", message: "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" },
                ]}
              >
                <Input
                  prefix={<IoIosMail className="text-gray-400 text-lg" />}
                  placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                  className="h-12 rounded-xl border-gray-300 hover:border-orange-400 focus:border-orange-500"
                />
              </Form.Item>

              {/* Password */}
              <Form.Item
                label={
                  <span className="text-gray-700 font-medium text-sm">
                    ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
                  </span>
                }
                name="password"
                rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" }]}
              >
                <Input.Password
                  prefix={<FaLock className="text-gray-400" />}
                  placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                  iconRender={(visible) =>
                    visible ? <EyeOutlined /> : <EyeInvisibleOutlined />
                  }
                  className="h-12 rounded-xl border-gray-300 hover:border-orange-400 focus:border-orange-500"
                />
              </Form.Item>

              {/* Remember Me & Forgot Password */}
              <div className="flex items-center justify-between mb-6">
                <Form.Item name="remember" valuePropName="checked" noStyle>
                  <Checkbox className="text-gray-600 text-sm">
                    ‡∏à‡∏î‡∏à‡∏≥‡∏â‡∏±‡∏ô‡πÑ‡∏ß‡πâ
                  </Checkbox>
                </Form.Item>
                <Link
                  to="/forgot-password"
                  className="!text-orange-500 !hover:text-orange-600 !text-sm !font-medium"
                >
                  ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?
                </Link>
              </div>

              {/* Login Button */}
              <Form.Item>
                <Button
                  type="primary"
                  htmlType="submit"
                  loading={loading}
                  icon={<IoMdExit className="text-lg" />}
                  className="w-full btn-orange-gradient"
                >
                  ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </Button>
              </Form.Item>

              {/* Continue with */}
              <div className="text-center text-gray-400 text-sm mb-4">
                ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢
              </div>

              {/* Social Login Buttons */}
              <div className="grid grid-cols-2 gap-4 mb-6">
                {/* Google */}
                <Button
                  className="h-12 rounded-xl border-2 border-gray-200 hover:border-red-400 hover:text-red-500 transition-all"
                  icon={<FaGoogle className="!text-lg !text-red-500" />}
                >
                  <span className="font-medium">Google</span>
                </Button>

                {/* Facebook */}
                <Button
                  className="h-12 rounded-xl border-2 border-gray-200 hover:border-blue-400 hover:text-blue-500 transition-all"
                  icon={<FaFacebook className="!text-lg !text-blue-600" />}
                >
                  <span className="font-medium">Facebook</span>
                </Button>
              </div>

              {/* Sign Up Link */}
              <div className="text-center">
                <span className="text-gray-600 text-sm">
                  ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ?{" "}
                </span>
                <Link
                  to="/register"
                  className="!text-orange-500 !hover:text-orange-600 !font-semibold !text-sm"
                >
                  ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                </Link>
              </div>
            </Form>
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 py-6 mt-auto">
        <div className="container mx-auto px-4 text-center text-gray-600">
          <p>¬© 2025 ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏Å‡∏µ‡∏¨‡∏≤ - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏ó‡∏Å‡∏µ‡∏¨‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</p>
        </div>
      </footer>
    </div>
  );
};

export default Login;